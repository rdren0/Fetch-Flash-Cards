{"ast":null,"code":"import _toConsumableArray from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './Components/Header.js';\nimport Container from './Components/Container.js';\nimport Card from './Components/Card.js';\nimport data from './data.js';\nimport loading from \"./Images/loading.svg\";\nimport './App.scss';\nexport var App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.showAll = function () {\n      var allCards = _this.state.questions.filter(function (card) {\n        return !_this.state.completed.includes(card.ID);\n      });\n\n      _this.setState({\n        selection: allCards\n      });\n    };\n\n    _this.sortCards = function (e) {\n      var value = e.target.innerText;\n\n      var sortedCards = _this.state.questions.filter(function (card) {\n        return card.Difficulty.toString() === value;\n      });\n\n      _this.setState({\n        selection: sortedCards\n      });\n    };\n\n    _this.onlyCompleted = function () {\n      var completedCards = _this.state.questions.filter(function (card) {\n        return _this.state.completed.includes(card.ID);\n      });\n\n      _this.setState({\n        selection: completedCards\n      });\n    };\n\n    _this.addCompleted = function (ID) {\n      var newState;\n\n      if (_this.state.completed.includes(ID)) {\n        newState = _this.state.completed.filter(function (card) {\n          return card !== ID;\n        });\n      } else {\n        newState = [].concat(_toConsumableArray(_this.state.completed), [ID]);\n      }\n\n      _this.setState({\n        completed: newState\n      }, function () {\n        _this.saveToStorage();\n      });\n    };\n\n    _this.saveToStorage = function () {\n      localStorage.setItem('Completed', JSON.stringify(_this.state.completed));\n    };\n\n    _this.state = {\n      questions: data.flashCards,\n      completed: [],\n      selection: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var completedCards = JSON.parse(localStorage.getItem('Completed')) || [];\n      this.setState({\n        completed: completedCards,\n        loading: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"App-loading\",\n          src: loading,\n          alt: \"loading-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Loading flashCards...\"));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"button-holder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.showAll,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"All\"), React.createElement(\"button\", {\n          onClick: this.sortCards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Easy\"), React.createElement(\"button\", {\n          onClick: this.sortCards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Medium\"), React.createElement(\"button\", {\n          onClick: this.sortCards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Hard\"), React.createElement(\"button\", {\n          className: \"completed-button\",\n          onClick: this.onlyCompleted,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Completed\")), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), React.createElement(Container, {\n          data: this.state.selection,\n          completed: this.state.completed,\n          addCompleted: this.addCompleted,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/src/App.js"],"names":["React","Component","Header","Container","Card","data","App","showAll","allCards","state","questions","filter","card","completed","includes","ID","setState","selection","sortCards","e","value","target","innerText","sortedCards","Difficulty","toString","onlyCompleted","completedCards","addCompleted","newState","saveToStorage","localStorage","setItem","JSON","stringify","flashCards","loading","parse","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Components/Header.js'\nimport Container from './Components/Container.js';\nimport Card from './Components/Card.js';\nimport data from './data.js';\nimport loading from './Images/loading.svg';\n\n\nimport './App.scss';\n\n\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: data.flashCards,\n      completed: [],\n      selection: [],\n      loading: true\n    }\n  }\n\n  showAll = () =>{\n    let allCards = this.state.questions.filter(card =>{\n      return (!this.state.completed.includes(card.ID))\n    })\n    this.setState({\n      selection: allCards\n    });    \n  }\n\n\n  sortCards = (e) =>{\n    let value = e.target.innerText;\n    let sortedCards =  this.state.questions.filter(card =>{\n      return card.Difficulty.toString() === value;\n    })\n    this.setState({\n        selection: sortedCards\n    }); \n  }\n\n  onlyCompleted = () =>{\n    let completedCards = this.state.questions.filter(card =>{\n      return (this.state.completed.includes(card.ID))\n    })\n    this.setState({\n        selection: completedCards\n    }); \n  }\n\n\n  addCompleted = (ID) => {\n    let newState;\n    if (this.state.completed.includes(ID)) {\n      newState = this.state.completed.filter(card => card !== ID);\n    } else {\n      newState = [...this.state.completed, ID];\n    }\n    this.setState({\n      completed : newState\n    }, () => {\n      this.saveToStorage();\n    });\n  }\n\n\n  saveToStorage = () => {\n    localStorage.setItem('Completed', JSON.stringify(this.state.completed));\n  }\n\n\n  componentDidMount() {\n    const completedCards = JSON.parse(localStorage.getItem('Completed')) || [];\n      this.setState({\n        completed: completedCards,\n        loading: false\n\n      });\n  }\n  \n  render() {\n     if(this.state.loading){\n      return(\n        <div>\n        <img className=\"App-loading\" src={loading} alt=\"loading-icon\" />\n          <p>\n            Loading flashCards...          \n          </p>\n        </div>\n\n      )\n    }else{\n      return(\n        <div>\n          <Header/>\n          <div className=\"button-holder\">\n            <button onClick={this.showAll}>All</button>\n            <button onClick={this.sortCards}>Easy</button>\n            <button onClick={this.sortCards}>Medium</button>\n            <button onClick={this.sortCards}>Hard</button>\n            <button className= \"completed-button\" onClick={this.onlyCompleted}>Completed</button>\n          </div>\n          <hr/>\n          <Container \n          data = {this.state.selection}\n          completed = {this.state.completed}\n          addCompleted = {this.addCompleted}\n          />\n      </div>\n      );\n    }\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}