{"ast":null,"code":"import _classCallCheck from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/src/Components/Container.js\";\nimport React, { Component } from 'react';\nimport Card from './Card';\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cards = this.props.data.flashCards.map(function (card) {\n        if (_this2.props.completed.includes(card.ID.toString())) {\n          console.log(\"This one is:\", card.ID);\n        } else {\n          console.log(\"This one isnt:\", card.ID);\n        }\n\n        return React.createElement(Card, {\n          ID: card.ID,\n          Question: card.Question,\n          Answer: card.Answer,\n          Difficulty: card.Difficulty,\n          completed: _this2.props.completed,\n          addCompleted: _this2.props.addCompleted,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, cards);\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default Container; // <iframe src=\"https://giphy.com/embed/xlYKItjhiDsY\" width=\"480\" height=\"270\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>","map":{"version":3,"sources":["/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/src/Components/Container.js"],"names":["React","Component","Card","Container","props","state","cards","data","flashCards","map","card","completed","includes","ID","toString","console","log","Question","Answer","Difficulty","addCompleted"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAKlB;;;;6BAIQ;AAAA;;AACP,UAAIC,KAAK,GAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,UAAhB,CAA2BC,GAA3B,CAA+B,UAAAC,IAAI,EAAG;AAChD,YAAG,MAAI,CAACN,KAAL,CAAWO,SAAX,CAAqBC,QAArB,CAA8BF,IAAI,CAACG,EAAL,CAAQC,QAAR,EAA9B,CAAH,EAAqD;AACnDC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,IAAI,CAACG,EAAjC;AACD,SAFD,MAEK;AACHE,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,IAAI,CAACG,EAAnC;AACD;;AACD,eAAO,oBAAC,IAAD;AACH,UAAA,EAAE,EAAEH,IAAI,CAACG,EADN;AAEH,UAAA,QAAQ,EAAIH,IAAI,CAACO,QAFd;AAGH,UAAA,MAAM,EAAIP,IAAI,CAACQ,MAHZ;AAIH,UAAA,UAAU,EAAIR,IAAI,CAACS,UAJhB;AAKH,UAAA,SAAS,EAAI,MAAI,CAACf,KAAL,CAAWO,SALrB;AAMH,UAAA,YAAY,EAAI,MAAI,CAACP,KAAL,CAAWgB,YANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAQD,OAdW,CAAZ;AAeC,aACG;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGd,KADH,CADH;AAKF;;;;EA/BqBL,S;;AAmCxB,eAAeE,SAAf,C,CAGA","sourcesContent":["import React, { Component } from 'react';\nimport Card from './Card';\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     \n      };\n  }\n\n  \n\n  render() {\n    let cards = this.props.data.flashCards.map(card =>{\n      if(this.props.completed.includes(card.ID.toString())){\n        console.log(\"This one is:\", card.ID)\n      }else{\n        console.log(\"This one isnt:\", card.ID)\n      }\n      return <Card\n          ID={card.ID}\n          Question = {card.Question}\n          Answer = {card.Answer}\n          Difficulty = {card.Difficulty}\n          completed = {this.props.completed}\n          addCompleted = {this.props.addCompleted}\n              />\n    });\n     return (\n        <div  className=\"container\" >\n          {cards}\n        </div>\n        )\n  }  \n}\n\n\nexport default Container;\n\n\n// <iframe src=\"https://giphy.com/embed/xlYKItjhiDsY\" width=\"480\" height=\"270\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>\n      "]},"metadata":{},"sourceType":"module"}