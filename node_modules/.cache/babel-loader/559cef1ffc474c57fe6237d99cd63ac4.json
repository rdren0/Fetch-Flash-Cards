{"ast":null,"code":"import _classCallCheck from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/src/Components/Container.js\";\nimport React, { Component } from 'react';\nimport Card from './Card';\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var completionStatus;\n      var cards;\n\n      if (this.selection) {\n        cards = this.props.selection.map(function (card) {\n          if (_this2.props.completed.includes(card.ID)) {\n            completionStatus = true;\n          } else {\n            completionStatus = false;\n          }\n\n          return React.createElement(Card, {\n            ID: card.ID,\n            Question: card.Question,\n            Answer: card.Answer,\n            Difficulty: card.Difficulty,\n            completed: _this2.props.completed,\n            addCompleted: _this2.props.addCompleted,\n            status: completionStatus,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          });\n        });\n      } else {// cards = <iframe src=\"https://giphy.com/embed/xlYKItjhiDsY\" width=\"480\" height=\"270\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, cards);\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default Container;","map":{"version":3,"sources":["/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/src/Components/Container.js"],"names":["React","Component","Card","Container","props","state","completionStatus","cards","selection","map","card","completed","includes","ID","Question","Answer","Difficulty","addCompleted"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAKlB;;;;6BAEQ;AAAA;;AACP,UAAIC,gBAAJ;AACA,UAAIC,KAAJ;;AACA,UAAG,KAAKC,SAAR,EAAkB;AAChBD,QAAAA,KAAK,GAAG,KAAKH,KAAL,CAAWI,SAAX,CAAqBC,GAArB,CAAyB,UAAAC,IAAI,EAAG;AACxC,cAAG,MAAI,CAACN,KAAL,CAAWO,SAAX,CAAqBC,QAArB,CAA8BF,IAAI,CAACG,EAAnC,CAAH,EAA0C;AACxCP,YAAAA,gBAAgB,GAAE,IAAlB;AACD,WAFD,MAEK;AACHA,YAAAA,gBAAgB,GAAE,KAAlB;AACD;;AACD,iBAAO,oBAAC,IAAD;AACH,YAAA,EAAE,EAAEI,IAAI,CAACG,EADN;AAEH,YAAA,QAAQ,EAAIH,IAAI,CAACI,QAFd;AAGH,YAAA,MAAM,EAAIJ,IAAI,CAACK,MAHZ;AAIH,YAAA,UAAU,EAAIL,IAAI,CAACM,UAJhB;AAKH,YAAA,SAAS,EAAI,MAAI,CAACZ,KAAL,CAAWO,SALrB;AAMH,YAAA,YAAY,EAAI,MAAI,CAACP,KAAL,CAAWa,YANxB;AAOH,YAAA,MAAM,EAAIX,gBAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASC,SAfO,CAAR;AAgBD,OAjBD,MAiBK,CACH;AACD;;AAEA,aACG;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,KADH,CADH;AAKF;;;;EArCqBN,S;;AAyCxB,eAAeE,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Card from './Card';\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     \n      };\n  }\n\n  render() {\n    let completionStatus;\n    let cards;\n    if(this.selection){\n      cards = this.props.selection.map(card =>{\n      if(this.props.completed.includes(card.ID)){\n        completionStatus =true;\n      }else{\n        completionStatus =false; \n      }\n      return <Card\n          ID={card.ID}\n          Question = {card.Question}\n          Answer = {card.Answer}\n          Difficulty = {card.Difficulty}\n          completed = {this.props.completed}\n          addCompleted = {this.props.addCompleted}\n          status = {completionStatus}\n              />\n      });\n    }else{\n      // cards = <iframe src=\"https://giphy.com/embed/xlYKItjhiDsY\" width=\"480\" height=\"270\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>\n    }\n    \n     return (\n        <div  className=\"container\" >\n          {cards}\n        </div>\n        )\n  }  \n}\n\n\nexport default Container;\n\n\n      "]},"metadata":{},"sourceType":"module"}