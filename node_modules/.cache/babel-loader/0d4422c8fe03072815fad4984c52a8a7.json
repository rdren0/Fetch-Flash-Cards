{"ast":null,"code":"import _classCallCheck from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/src/Components/Card.js\";\nimport React, { Component } from 'react';\nimport completed from \"../Images/completed.svg\";\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card(props) {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Card).call(this, props));\n\n    _this.recordResponse = function (e) {\n      var response = e.target.value;\n\n      _this.setState({\n        answer: response\n      });\n    };\n\n    _this.checkAnswer = function (e) {\n      if (_this.props.Answer.toString() === _this.state.answer || _this.props.Answer.toString() === \"test\") {\n        _this.setState({\n          revealAnswer: true\n        });\n\n        _this.props.addCompleted(_this.props.ID);\n      }\n    };\n\n    _this.state = {\n      answer: null,\n      revealAnswer: false\n    };\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.revealAnswer) {\n        return React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"question-area\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \" \", this.props.Question, \" \"), React.createElement(\"h2\", {\n          className: \"Answer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \" \", this.props.Answer, \" \")), React.createElement(\"img\", {\n          src: completed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \" \", this.props.Difficulty, \" \")));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"question-area\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \" \", this.props.Question, \" \")), React.createElement(\"div\", {\n          className: \"input-area\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: this.props.ID,\n          onChange: this.recordResponse,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"submit\",\n          onClick: this.checkAnswer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \" Check Answer \")), React.createElement(\"div\", {\n          className: \"status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \" \", this.props.Difficulty, \" \")));\n      }\n    }\n  }]);\n\n  return Card;\n}(Component);\n\nexport default Card;","map":{"version":3,"sources":["/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/src/Components/Card.js"],"names":["React","Component","Card","props","recordResponse","e","response","target","value","setState","answer","checkAnswer","Answer","toString","state","revealAnswer","addCompleted","ID","Question","completed","Difficulty"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;IAGMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8EAAMA,KAAN;;AADgB,UASlBC,cATkB,GASD,UAACC,CAAD,EAAM;AACrB,UAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAxB;;AACA,YAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEJ;AAAT,OAAd;AACD,KAZiB;;AAAA,UAclBK,WAdkB,GAcJ,UAACN,CAAD,EAAM;AAChB,UAAG,MAAKF,KAAL,CAAWS,MAAX,CAAkBC,QAAlB,OAAiC,MAAKC,KAAL,CAAWJ,MAA5C,IAAsD,MAAKP,KAAL,CAAWS,MAAX,CAAkBC,QAAlB,OAAiC,MAA1F,EAAiG;AAC/F,cAAKJ,QAAL,CAAc;AAACM,UAAAA,YAAY,EAAE;AAAf,SAAd;;AACA,cAAKZ,KAAL,CAAWa,YAAX,CAAwB,MAAKb,KAAL,CAAWc,EAAnC;AACD;AACF,KAnBe;;AAEhB,UAAKH,KAAL,GAAa;AACbJ,MAAAA,MAAM,EAAE,IADK;AAEbK,MAAAA,YAAY,EAAE;AAFD,KAAb;AAFgB;AAOjB;;;;6BAcO;AACN,UAAG,KAAKD,KAAL,CAAWC,YAAd,EAA2B;AACzB,eACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAM,KAAKZ,KAAL,CAAWe,QAAjB,MADF,EAEE;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAyB,KAAKf,KAAL,CAAWS,MAApC,MAFF,CADA,EAME;AAAK,UAAA,GAAG,EAAGO,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAOA;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAM,KAAKhB,KAAL,CAAWiB,UAAjB,MADF,CAPA,CADF;AAaD,OAdD,MAcK;AACH,eACA;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAM,KAAKjB,KAAL,CAAWe,QAAjB,MADF,CADF,EAIE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,EAAE,EAAG,KAAKf,KAAL,CAAWc,EAAvB;AAA2B,UAAA,QAAQ,EAAE,KAAKb,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAG,KAAKO,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,CAJF,EASE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAM,KAAKR,KAAL,CAAWiB,UAAjB,MADF,CATF,CADA;AAeD;AACF;;;;EAtDgBnB,S;;AA0DnB,eAAeC,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport completed from '../Images/completed.svg'\n\nclass Card extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n    answer: null,\n    revealAnswer: false\n\n    }\n  }\n\n  recordResponse = (e) =>{\n    let response = e.target.value;\n    this.setState({answer: response})\n  }\n\n  checkAnswer = (e) =>{\n      if(this.props.Answer.toString() === this.state.answer || this.props.Answer.toString() === \"test\"){\n        this.setState({revealAnswer: true})\n        this.props.addCompleted(this.props.ID)\n      }\n    }\n\n  render(){\n    if(this.state.revealAnswer){\n      return(\n        <div className=\"card\">\n        <div className=\"question-area\">\n          <h2> {this.props.Question} </h2>\n          <h2 className=\"Answer\"> {this.props.Answer} </h2>\n\n        </div>\n          <img src ={completed}/>\n        <div className=\"status\">\n          <h6> {this.props.Difficulty} </h6>\n        </div>\n      </div>\n        )\n    }else{\n      return (\n      <div className=\"card\">\n        <div className=\"question-area\">\n          <h2> {this.props.Question} </h2>\n        </div>\n        <div className=\"input-area\">\n          <input id= {this.props.ID} onChange={this.recordResponse}/>\n          <br/>\n          <button className=\"submit\" onClick ={this.checkAnswer}> Check Answer </button>\n        </div>\n        <div className=\"status\">\n          <h6> {this.props.Difficulty} </h6>\n        </div>\n      </div>\n      );\n    }\n  } \n}\n\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}