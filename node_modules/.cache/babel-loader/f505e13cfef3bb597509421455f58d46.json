{"ast":null,"code":"import _classCallCheck from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/src/Components/Container.js\";\nimport React, { Component } from 'react';\nimport Card from './Card';\nimport PlaceHolder from './PlaceHolder';\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    _classCallCheck(this, Container);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var completionStatus;\n      var cards;\n\n      if (this.props.data.length) {\n        cards = this.props.data.map(function (card) {\n          if (_this.props.completed.includes(card.ID)) {\n            completionStatus = true;\n          } else {\n            completionStatus = false;\n          }\n\n          return React.createElement(Card, {\n            ID: card.ID,\n            Question: card.Question,\n            Answer: card.Answer,\n            Difficulty: card.Difficulty,\n            completed: _this.props.completed,\n            addCompleted: _this.props.addCompleted,\n            status: completionStatus,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          });\n        });\n      } else {\n        cards = React.createElement(PlaceHolder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, cards);\n    }\n  }]);\n\n  return Container;\n}(Component); // cards = <iframe src=\"https://giphy.com/embed/xlYKItjhiDsY\" width=\"480\" height=\"270\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>\n\n\nexport default Container;","map":{"version":3,"sources":["/Users/rachaeldrennan/Projects/ModuleTwo/Memoize-Fetch/src/Components/Container.js"],"names":["React","Component","Card","PlaceHolder","Container","props","completionStatus","cards","data","length","map","card","completed","includes","ID","Question","Answer","Difficulty","addCompleted"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kFACXA,KADW;AAGlB;;;;6BAEQ;AAAA;;AACP,UAAIC,gBAAJ;AACA,UAAIC,KAAJ;;AACA,UAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,MAAnB,EAA0B;AAC1BF,QAAAA,KAAK,GAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBE,GAAhB,CAAoB,UAAAC,IAAI,EAAG;AACjC,cAAG,KAAI,CAACN,KAAL,CAAWO,SAAX,CAAqBC,QAArB,CAA8BF,IAAI,CAACG,EAAnC,CAAH,EAA0C;AACxCR,YAAAA,gBAAgB,GAAE,IAAlB;AACD,WAFD,MAEK;AACHA,YAAAA,gBAAgB,GAAE,KAAlB;AACD;;AAEH,iBAAO,oBAAC,IAAD;AACL,YAAA,EAAE,EAAEK,IAAI,CAACG,EADJ;AAEL,YAAA,QAAQ,EAAIH,IAAI,CAACI,QAFZ;AAGL,YAAA,MAAM,EAAIJ,IAAI,CAACK,MAHV;AAIL,YAAA,UAAU,EAAIL,IAAI,CAACM,UAJd;AAKL,YAAA,SAAS,EAAI,KAAI,CAACZ,KAAL,CAAWO,SALnB;AAML,YAAA,YAAY,EAAI,KAAI,CAACP,KAAL,CAAWa,YANtB;AAOL,YAAA,MAAM,EAAIZ,gBAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASG,SAhBK,CAAR;AAiBC,OAlBD,MAkBK;AACHC,QAAAA,KAAK,GAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD;;AAED,aACE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KADH,CADF;AAKD;;;;EApCqBN,S,GAsClB;;;AAGN,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Card from './Card';\nimport PlaceHolder from './PlaceHolder';\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n    let completionStatus;\n    let cards;\n    if(this.props.data.length){\n    cards = this.props.data.map(card =>{\n      if(this.props.completed.includes(card.ID)){\n        completionStatus =true;\n      }else{\n        completionStatus =false; \n      }\n\n    return <Card\n      ID={card.ID}\n      Question = {card.Question}\n      Answer = {card.Answer}\n      Difficulty = {card.Difficulty}\n      completed = {this.props.completed}\n      addCompleted = {this.props.addCompleted}\n      status = {completionStatus}\n              />\n      }); \n    }else{\n      cards = <PlaceHolder />\n    }\n\n    return (\n      <div  className=\"container\" >\n        {cards}\n      </div>\n    )\n  }  \n}\n      // cards = <iframe src=\"https://giphy.com/embed/xlYKItjhiDsY\" width=\"480\" height=\"270\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>\n\n\nexport default Container;\n\n\n      "]},"metadata":{},"sourceType":"module"}